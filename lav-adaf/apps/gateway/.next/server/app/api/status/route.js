/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/status/route";
exports.ids = ["app/api/status/route"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstatus%2Froute&page=%2Fapi%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstatus%2Froute.ts&appDir=%2Fhome%2Fparallels%2FDesktop%2Flav-adaf%2Fapps%2Fgateway%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fparallels%2FDesktop%2Flav-adaf%2Fapps%2Fgateway&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstatus%2Froute&page=%2Fapi%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstatus%2Froute.ts&appDir=%2Fhome%2Fparallels%2FDesktop%2Flav-adaf%2Fapps%2Fgateway%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fparallels%2FDesktop%2Flav-adaf%2Fapps%2Fgateway&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _home_parallels_Desktop_lav_adaf_apps_gateway_src_app_api_status_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/status/route.ts */ \"(rsc)/./src/app/api/status/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/status/route\",\n        pathname: \"/api/status\",\n        filename: \"route\",\n        bundlePath: \"app/api/status/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/home/parallels/Desktop/lav-adaf/apps/gateway/src/app/api/status/route.ts\",\n    nextConfigOutput,\n    userland: _home_parallels_Desktop_lav_adaf_apps_gateway_src_app_api_status_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/status/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstatus%2Froute&page=%2Fapi%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstatus%2Froute.ts&appDir=%2Fhome%2Fparallels%2FDesktop%2Flav-adaf%2Fapps%2Fgateway%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fparallels%2FDesktop%2Flav-adaf%2Fapps%2Fgateway&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \************************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/status/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/status/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   HEAD: () => (/* binding */ HEAD)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/config */ \"(rsc)/./src/config.ts\");\n// ======================================================================================\n// LAV/ADAF Gateway - Main Status & Health API\n// ======================================================================================\n\n\n// Mock service health checks (replace with actual health checks)\nasync function checkServiceHealth() {\n    const services = [];\n    // Database health\n    try {\n        // TODO: Replace with actual Postgres health check\n        services.push({\n            name: 'postgres',\n            status: 'healthy',\n            latency: Math.floor(Math.random() * 10) + 5,\n            lastCheck: new Date().toISOString(),\n            details: {\n                connections: 5,\n                maxConnections: 100\n            }\n        });\n    } catch (error) {\n        services.push({\n            name: 'postgres',\n            status: 'unhealthy',\n            lastCheck: new Date().toISOString(),\n            details: {\n                error: 'Connection failed'\n            }\n        });\n    }\n    // Redis health\n    try {\n        // TODO: Replace with actual Redis health check\n        services.push({\n            name: 'redis',\n            status: 'healthy',\n            latency: Math.floor(Math.random() * 5) + 1,\n            lastCheck: new Date().toISOString(),\n            details: {\n                memory: '10MB',\n                connectedClients: 3\n            }\n        });\n    } catch (error) {\n        services.push({\n            name: 'redis',\n            status: 'unhealthy',\n            lastCheck: new Date().toISOString(),\n            details: {\n                error: 'Connection failed'\n            }\n        });\n    }\n    // Kafka health\n    try {\n        // TODO: Replace with actual Kafka health check\n        services.push({\n            name: 'kafka',\n            status: 'healthy',\n            latency: Math.floor(Math.random() * 20) + 10,\n            lastCheck: new Date().toISOString(),\n            details: {\n                topics: 8,\n                brokers: 1\n            }\n        });\n    } catch (error) {\n        services.push({\n            name: 'kafka',\n            status: 'unhealthy',\n            lastCheck: new Date().toISOString(),\n            details: {\n                error: 'Connection failed'\n            }\n        });\n    }\n    // Agent health checks\n    const agents = [\n        'market-sentinel',\n        'executioner',\n        'risk-warden',\n        'defi-ranger',\n        'basis-maker'\n    ];\n    for (const agent of agents){\n        try {\n            // TODO: Replace with actual agent health checks\n            const isHealthy = Math.random() > 0.1 // 90% healthy mock\n            ;\n            services.push({\n                name: agent,\n                status: isHealthy ? 'healthy' : 'degraded',\n                latency: Math.floor(Math.random() * 50) + 10,\n                lastCheck: new Date().toISOString(),\n                details: isHealthy ? {\n                    state: 'running'\n                } : {\n                    state: 'recovering'\n                }\n            });\n        } catch (error) {\n            services.push({\n                name: agent,\n                status: 'unhealthy',\n                lastCheck: new Date().toISOString(),\n                details: {\n                    error: 'Service unreachable'\n                }\n            });\n        }\n    }\n    return services;\n}\n// Determine overall system health\nfunction determineOverallHealth(services) {\n    const unhealthyCount = services.filter((s)=>s.status === 'unhealthy').length;\n    const degradedCount = services.filter((s)=>s.status === 'degraded').length;\n    if (unhealthyCount > 0) return 'unhealthy';\n    if (degradedCount > 2) return 'degraded';\n    return 'healthy';\n}\n// Get system metrics\nfunction getSystemMetrics() {\n    const memUsage = process.memoryUsage();\n    const cpuUsage = process.cpuUsage();\n    return {\n        uptime: process.uptime(),\n        memory: {\n            used: Math.round(memUsage.heapUsed / 1024 / 1024),\n            free: Math.round((memUsage.heapTotal - memUsage.heapUsed) / 1024 / 1024),\n            total: Math.round(memUsage.heapTotal / 1024 / 1024) // MB\n        },\n        cpu: {\n            usage: Math.round((cpuUsage.user + cpuUsage.system) / 1000000) // Convert to percentage approximation\n        }\n    };\n}\nasync function GET(request) {\n    try {\n        const services = await checkServiceHealth();\n        const overallStatus = determineOverallHealth(services);\n        const systemStatus = {\n            status: overallStatus,\n            timestamp: new Date().toISOString(),\n            version: '1.3.0',\n            environment: _config__WEBPACK_IMPORTED_MODULE_1__.config.NODE_ENV,\n            services,\n            features: {\n                liveTrading: _config__WEBPACK_IMPORTED_MODULE_1__.features.liveTrading,\n                mlAgents: _config__WEBPACK_IMPORTED_MODULE_1__.features.mlAgents,\n                governance: _config__WEBPACK_IMPORTED_MODULE_1__.features.governance,\n                mockData: _config__WEBPACK_IMPORTED_MODULE_1__.features.mockData\n            },\n            metrics: getSystemMetrics()\n        };\n        // Set appropriate HTTP status based on health\n        const httpStatus = overallStatus === 'healthy' ? 200 : overallStatus === 'degraded' ? 200 : 503;\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(systemStatus, {\n            status: httpStatus\n        });\n    } catch (error) {\n        console.error('Health check failed:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: 'unhealthy',\n            timestamp: new Date().toISOString(),\n            error: 'Health check system failure',\n            details: error instanceof Error ? error.message : 'Unknown error'\n        }, {\n            status: 500\n        });\n    }\n}\n// Handle HEAD requests for basic health checks\nasync function HEAD(request) {\n    try {\n        const services = await checkServiceHealth();\n        const overallStatus = determineOverallHealth(services);\n        const httpStatus = overallStatus === 'healthy' ? 200 : overallStatus === 'degraded' ? 200 : 503;\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(null, {\n            status: httpStatus\n        });\n    } catch (error) {\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(null, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/status/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/config.ts":
/*!***********************!*\
  !*** ./src/config.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   dbConfig: () => (/* binding */ dbConfig),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   features: () => (/* binding */ features),\n/* harmony export */   isDevelopment: () => (/* binding */ isDevelopment),\n/* harmony export */   isProduction: () => (/* binding */ isProduction),\n/* harmony export */   isTesting: () => (/* binding */ isTesting),\n/* harmony export */   kafkaConfig: () => (/* binding */ kafkaConfig),\n/* harmony export */   redisConfig: () => (/* binding */ redisConfig),\n/* harmony export */   riskLimits: () => (/* binding */ riskLimits)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/types.js\");\n// ======================================================================================\n// LAV/ADAF Gateway - Configuration Management\n// ======================================================================================\n\nconst configSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    // Environment\n    NODE_ENV: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'development',\n        'production',\n        'test'\n    ]).default('development'),\n    PORT: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.number().default(3000),\n    LOG_LEVEL: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'debug',\n        'info',\n        'warn',\n        'error'\n    ]).default('info'),\n    TIMEZONE: zod__WEBPACK_IMPORTED_MODULE_0__.string().default('America/Mexico_City'),\n    // Databases\n    POSTGRES_URL: zod__WEBPACK_IMPORTED_MODULE_0__.string(),\n    REDIS_URL: zod__WEBPACK_IMPORTED_MODULE_0__.string().default('redis://localhost:6379'),\n    CLICKHOUSE_URL: zod__WEBPACK_IMPORTED_MODULE_0__.string().default('http://localhost:8123'),\n    // Messaging\n    KAFKA_BROKERS: zod__WEBPACK_IMPORTED_MODULE_0__.string().default('localhost:9092'),\n    KAFKA_CLIENT_ID: zod__WEBPACK_IMPORTED_MODULE_0__.string().default('lav-adaf-gateway'),\n    KAFKA_GROUP_ID: zod__WEBPACK_IMPORTED_MODULE_0__.string().default('lav-adaf-gateway-group'),\n    // Risk Management\n    MAX_POSITION_SIZE: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.number().default(1000000),\n    MAX_VAR_1D: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.number().default(0.03),\n    MAX_DRAWDOWN: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.number().default(0.10),\n    DEFAULT_SLIPPAGE_LIMIT: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.number().default(0.005),\n    // External APIs (Mock mode defaults)\n    MOCK_DATA_ENABLED: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.boolean().default(true),\n    COINBASE_API_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    BINANCE_API_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    // Security\n    FIREBLOCKS_API_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    SAFE_ADDRESS: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    TRM_API_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    // Feature Flags\n    ENABLE_LIVE_TRADING: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.boolean().default(false),\n    ENABLE_ML_AGENTS: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.boolean().default(true),\n    ENABLE_GOVERNANCE: zod__WEBPACK_IMPORTED_MODULE_0__.coerce.boolean().default(true)\n});\n// Parse and validate environment variables\nfunction loadConfig() {\n    try {\n        const rawConfig = {\n            NODE_ENV: \"development\",\n            PORT: process.env.PORT,\n            LOG_LEVEL: process.env.LOG_LEVEL,\n            TIMEZONE: process.env.TIMEZONE,\n            POSTGRES_URL: process.env.POSTGRES_URL,\n            REDIS_URL: process.env.REDIS_URL,\n            CLICKHOUSE_URL: process.env.CLICKHOUSE_URL,\n            KAFKA_BROKERS: process.env.KAFKA_BROKERS,\n            KAFKA_CLIENT_ID: process.env.KAFKA_CLIENT_ID,\n            KAFKA_GROUP_ID: process.env.KAFKA_GROUP_ID,\n            MAX_POSITION_SIZE: process.env.MAX_POSITION_SIZE,\n            MAX_VAR_1D: process.env.MAX_VAR_1D,\n            MAX_DRAWDOWN: process.env.MAX_DRAWDOWN,\n            DEFAULT_SLIPPAGE_LIMIT: process.env.DEFAULT_SLIPPAGE_LIMIT,\n            MOCK_DATA_ENABLED: process.env.MOCK_DATA_ENABLED,\n            COINBASE_API_KEY: process.env.COINBASE_API_KEY,\n            BINANCE_API_KEY: process.env.BINANCE_API_KEY,\n            FIREBLOCKS_API_KEY: process.env.FIREBLOCKS_API_KEY,\n            SAFE_ADDRESS: process.env.SAFE_ADDRESS,\n            TRM_API_KEY: process.env.TRM_API_KEY,\n            ENABLE_LIVE_TRADING: process.env.ENABLE_LIVE_TRADING,\n            ENABLE_ML_AGENTS: process.env.ENABLE_ML_AGENTS,\n            ENABLE_GOVERNANCE: process.env.ENABLE_GOVERNANCE\n        };\n        return configSchema.parse(rawConfig);\n    } catch (error) {\n        console.error('❌ Configuration validation failed:', error);\n        process.exit(1);\n    }\n}\nconst config = loadConfig();\n// Configuration helpers\nconst isDevelopment = config.NODE_ENV === 'development';\nconst isProduction = config.NODE_ENV === 'production';\nconst isTesting = config.NODE_ENV === 'test';\n// Derived configurations\nconst dbConfig = {\n    url: config.POSTGRES_URL,\n    ssl: isProduction ? {\n        rejectUnauthorized: false\n    } : false\n};\nconst redisConfig = {\n    url: config.REDIS_URL,\n    retryDelayOnFailover: 100,\n    maxRetriesPerRequest: 3\n};\nconst kafkaConfig = {\n    brokers: config.KAFKA_BROKERS.split(','),\n    clientId: config.KAFKA_CLIENT_ID,\n    groupId: config.KAFKA_GROUP_ID,\n    ssl: isProduction\n};\n// Risk limits\nconst riskLimits = {\n    maxPositionSize: config.MAX_POSITION_SIZE,\n    maxVar1d: config.MAX_VAR_1D,\n    maxDrawdown: config.MAX_DRAWDOWN,\n    defaultSlippageLimit: config.DEFAULT_SLIPPAGE_LIMIT\n};\n// Feature flags\nconst features = {\n    liveTrading: config.ENABLE_LIVE_TRADING,\n    mlAgents: config.ENABLE_ML_AGENTS,\n    governance: config.ENABLE_GOVERNANCE,\n    mockData: config.MOCK_DATA_ENABLED\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/config.ts\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \************************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1","vendor-chunks/@opentelemetry+api@1.9.0","vendor-chunks/zod@3.25.76"], () => (__webpack_exec__("(rsc)/../../node_modules/.pnpm/next@15.5.4_@opentelemetry+api@1.9.0_react-dom@19.1.1_react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstatus%2Froute&page=%2Fapi%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstatus%2Froute.ts&appDir=%2Fhome%2Fparallels%2FDesktop%2Flav-adaf%2Fapps%2Fgateway%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fparallels%2FDesktop%2Flav-adaf%2Fapps%2Fgateway&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();